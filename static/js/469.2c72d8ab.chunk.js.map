{"version":3,"file":"static/js/469.2c72d8ab.chunk.js","mappings":"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","sources":["pages/RemoteComponents/index.js"],"sourcesContent":["import { useMemo, useState, useRef } from 'react';\nimport { createWithRemoteLoader, useLoader } from '@kne/remote-loader';\nimport { Typography } from 'antd';\nimport createEntry from '@kne/modules-dev/dist/create-entry';\nimport { useParams, Navigate } from 'react-router-dom';\nimport get from 'lodash/get';\nimport { withFetch } from '@kne/react-fetch';\nimport compose from '@kne/compose';\n\nconst Example = createEntry.Example;\n\nconst RemoteComponentsPage = compose(\n  withFetch,\n  createWithRemoteLoader({\n    modules: ['Filter@fields', 'Filter@getFilterValue']\n  })\n)(({ remoteModules, data }) => {\n  const { libs, libsMap } = useMemo(() => {\n    const libs = data['remote-components'].map(item => {\n      return {\n        label: item.name,\n        value: item.name,\n        packageName: item.packageName,\n        version: Object.keys(item.versions)\n          .sort((a, b) => {\n            return new Date(item.versions[b].time) - new Date(item.versions[a].time);\n          })\n          .map(key => {\n            return {\n              label: `v${key}`,\n              value: key\n            };\n          })\n      };\n    });\n    const libsMap = new Map(libs.map(item => [item.value, item]));\n    return { libs, libsMap };\n  }, [data]);\n\n  const [fields, getFilterValue] = remoteModules;\n  const [filter, setFilter] = useState([]);\n  const { id: currentComponent } = useParams();\n\n  const filterValue = getFilterValue(filter);\n  const libName = filterValue['libName'] || get(libs, '[0].value');\n  const libNameRef = useRef(null);\n\n  const filterVersion = filterValue['version'];\n\n  const version = useMemo(() => {\n    if (libNameRef.current !== libName) {\n      setFilter(filter => {\n        return filter.filter(({ name }) => name !== 'version');\n      });\n      libNameRef.current = libName;\n      return get(libsMap.get(libName), 'version[0].value');\n    }\n    return filterVersion || get(libsMap.get(libName), 'version[0].value');\n  }, [libName, libsMap, filterVersion]);\n\n  const { loading, error, remoteModules: targetModules } = useLoader({ modules: [`${libName}/${version}:components`] });\n\n  if (loading) {\n    return null;\n  }\n\n  if (error) {\n    return <Navigate to={`/error?msg=加载远程组件库可能不符合规范，您可以向开发者报告该问题`} replace />;\n  }\n\n  const [components] = targetModules;\n\n  const { AdvancedSelectFilterItem } = fields;\n\n  return (\n    <Example\n      baseUrl=\"/components\"\n      readme={components}\n      pageProps={{\n        titleExtra: (\n          <Typography>\n            packageName:<Typography.Text code>{get(libsMap.get(libName), 'packageName')}</Typography.Text> token:\n            <Typography.Text code>\n              {libName}/{version}@{currentComponent}\n            </Typography.Text>\n          </Typography>\n        ),\n        filter: {\n          value: filter,\n          onChange: setFilter,\n          list: [\n            [\n              <AdvancedSelectFilterItem\n                label=\"组件库\"\n                name=\"libName\"\n                single\n                api={{\n                  loader: () => {\n                    return {\n                      pageData: libs\n                    };\n                  }\n                }}\n              />,\n              <AdvancedSelectFilterItem\n                label=\"版本\"\n                name=\"version\"\n                single\n                api={{\n                  data: libName,\n                  loader: ({ data }) => {\n                    return {\n                      pageData: get(libsMap.get(data), 'version', [])\n                    };\n                  }\n                }}\n              />\n            ]\n          ]\n        }\n      }}\n    />\n  );\n});\n\nconst RemoteComponents = createWithRemoteLoader({\n  modules: ['Global@usePreset']\n})(({ remoteModules }) => {\n  const [usePreset] = remoteModules;\n  const { apis } = usePreset();\n  return (\n    <RemoteComponentsPage\n      {...Object.assign({}, apis.manifest.getDetail, {\n        transformResponse: response => {\n          return { data: { code: 200, results: response.data } };\n        }\n      })}\n    />\n  );\n});\n\nexport default RemoteComponents;\n"],"names":["Example","createEntry","RemoteComponentsPage","compose","withFetch","createWithRemoteLoader","modules","_ref","remoteModules","data","libs","libsMap","useMemo","map","item","label","name","value","packageName","version","Object","keys","versions","sort","a","b","Date","time","key","concat","Map","fields","getFilterValue","filter","setFilter","useState","id","currentComponent","useParams","filterValue","libName","get","libNameRef","useRef","filterVersion","current","_ref2","loading","error","targetModules","useLoader","_jsx","Navigate","to","replace","components","AdvancedSelectFilterItem","baseUrl","readme","pageProps","titleExtra","_jsxs","Typography","children","Text","code","onChange","list","single","api","loader","pageData","_ref3","_ref4","usePreset","apis","assign","manifest","getDetail","transformResponse","response","results"],"sourceRoot":""}