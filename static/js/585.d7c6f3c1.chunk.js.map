{"version":3,"file":"static/js/585.d7c6f3c1.chunk.js","mappings":"qNAKA,MAAMA,GAAYC,EAAAA,EAAAA,wBAAuB,CACvCC,QAAS,CAAC,uCADMD,EAEfE,IAAyC,IAAxC,cAAEC,EAAa,IAAEC,EAAG,WAAEC,GAAYH,EACpC,MAAOI,GAAkBH,EACzB,OACEI,EAAAA,EAAAA,KAACC,IAAK,CACJJ,IAAKA,EACLK,kBAAmBC,IACV,CACLC,KAAM,CAAEC,KAAM,IAAKC,QAASH,EAASC,QAGzCG,OAAQC,IAAe,IAAd,KAAEJ,GAAMI,EACf,OAAOR,EAAAA,EAAAA,KAACD,EAAc,CAACU,UAAU,aAAaC,QAASN,EAAMN,WAAYA,GAAc,GAEzF,IAIAa,EAAWC,IAAe,IAAd,KAAER,GAAMQ,EACxB,MAAMC,GAAgBC,EAAAA,EAAAA,UAAQ,IACrB,IAAIC,IAAIX,EAAKY,KAAIC,GAAQ,CAACA,EAAKC,GAAID,OACzC,CAACb,KACGe,IAAUC,EAAAA,EAAAA,mBACXF,EAAKC,EAAOE,IAAI,MAEtB,OAAMH,GAAML,EAAcQ,IAAIH,IAIvBlB,EAAAA,EAAAA,KAACR,EAAS,CAACK,IAAK,sBAAsBgB,EAAcQ,IAAIH,GAAII,OAAQxB,WAAY,gCAH9EE,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAACC,GAAG,SAASC,SAAO,GAGiF,EAGnHvB,EAAoBC,IACjB,CACLC,KAAM,CACJC,KAAM,IACNC,QAASH,EAASC,QAyDxB,GApDcX,EAAAA,EAAAA,wBAAuB,CACnCC,QAAS,CAAC,8BAA+B,gCAD7BD,EAEXiC,IAAwB,IAAvB,cAAE9B,GAAe8B,EACnB,MAAOC,EAAMC,GAAQhC,GACdiC,EAASC,IAAcC,EAAAA,EAAAA,YAC9B,OACE/B,EAAAA,EAAAA,KAACC,IAAK,CACJJ,IAAK,mCACLK,kBAAmBA,EACnBK,OAAQyB,IAAe,IAAd,KAAE5B,GAAM4B,EACf,OACEhC,EAAAA,EAAAA,KAAC2B,EAAI,CACHM,KAAK,QACLC,MAAM,2BACNC,MACEnC,EAAAA,EAAAA,KAAC4B,EAAI,CACHQ,WAAYP,EACZQ,SAAUP,EACVQ,MAAO,CACL,CACEC,IAAK,QACLC,MAAO,wBACPlB,KAAM,UAER,CACEiB,IAAK,UACLC,MAAO,eACPC,SAAU,iBACVC,SAAUtC,EAAKY,KAAI2B,IAAoB,IAAnB,GAAEzB,EAAE,MAAEgB,GAAOS,EAC/B,MAAO,CACLJ,IAAKrB,EACLsB,MAAON,EACPZ,KAAM,oBAAoBJ,IAC3B,QAKVwB,UAEDE,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAAAH,SAAA,EACL1C,EAAAA,EAAAA,KAAC8C,EAAAA,MAAK,CAACC,OAAK,EAACC,SAAShD,EAAAA,EAAAA,KAACR,EAAS,CAACK,IAAKoD,OAAOC,WAAa,iBAC1DlD,EAAAA,EAAAA,KAAC8C,EAAAA,MAAK,CAACxB,KAAK,SAAS0B,SAAShD,EAAAA,EAAAA,KAACW,EAAQ,CAACP,KAAMA,OAC9CJ,EAAAA,EAAAA,KAAC8C,EAAAA,MAAK,CAACxB,KAAK,IAAI0B,SAAShD,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAACC,GAAG,SAASC,SAAO,UAEnD,GAGX,G","sources":["pages/About/index.js"],"sourcesContent":["import { createWithRemoteLoader } from '@kne/remote-loader';\nimport Fetch from '@kne/react-fetch';\nimport { Routes, Route, Navigate, useSearchParams } from 'react-router-dom';\nimport { useMemo, useState } from 'react';\n\nconst MDContent = createWithRemoteLoader({\n  modules: ['components-document:MarkdownRender']\n})(({ remoteModules, url, assetsPath }) => {\n  const [MarkdownRender] = remoteModules;\n  return (\n    <Fetch\n      url={url}\n      transformResponse={response => {\n        return {\n          data: { code: 200, results: response.data }\n        };\n      }}\n      render={({ data }) => {\n        return <MarkdownRender className=\"md-content\" content={data} assetsPath={assetsPath} />;\n      }}\n    />\n  );\n});\n\nconst MemberMD = ({ data }) => {\n  const memberMapping = useMemo(() => {\n    return new Map(data.map(item => [item.id, item]));\n  }, [data]);\n  const [search] = useSearchParams();\n  const id = search.get('id');\n\n  if (!(id && memberMapping.get(id))) {\n    return <Navigate to=\"/about\" replace />;\n  }\n\n  return <MDContent url={`/static-data/member${memberMapping.get(id).path}`} assetsPath={'/static-data/member/assets'} />;\n};\n\nconst transformResponse = response => {\n  return {\n    data: {\n      code: 200,\n      results: response.data\n    }\n  };\n};\n\nconst About = createWithRemoteLoader({\n  modules: ['components-core:Layout@Page', 'components-core:Layout@Menu']\n})(({ remoteModules }) => {\n  const [Page, Menu] = remoteModules;\n  const [current, setCurrent] = useState();\n  return (\n    <Fetch\n      url={'static-data/member/manifest.json'}\n      transformResponse={transformResponse}\n      render={({ data }) => {\n        return (\n          <Page\n            name=\"about\"\n            title=\"关于我们\"\n            menu={\n              <Menu\n                currentKey={current}\n                onChange={setCurrent}\n                items={[\n                  {\n                    key: 'group',\n                    label: '关于kne-union',\n                    path: '/about'\n                  },\n                  {\n                    key: 'members',\n                    label: '成员',\n                    iconType: 'icon-liangdian',\n                    children: data.map(({ id, title }) => {\n                      return {\n                        key: id,\n                        label: title,\n                        path: `/about/member?id=${id}`\n                      };\n                    })\n                  }\n                ]}\n              />\n            }\n          >\n            <Routes>\n              <Route index element={<MDContent url={window.PUBLIC_URL + '/about.md'} />} />\n              <Route path=\"member\" element={<MemberMD data={data} />} />\n              <Route path=\"*\" element={<Navigate to=\"/about\" replace />} />\n            </Routes>\n          </Page>\n        );\n      }}\n    />\n  );\n});\n\nexport default About;\n"],"names":["MDContent","createWithRemoteLoader","modules","_ref","remoteModules","url","assetsPath","MarkdownRender","_jsx","Fetch","transformResponse","response","data","code","results","render","_ref2","className","content","MemberMD","_ref3","memberMapping","useMemo","Map","map","item","id","search","useSearchParams","get","path","Navigate","to","replace","_ref4","Page","Menu","current","setCurrent","useState","_ref5","name","title","menu","currentKey","onChange","items","key","label","iconType","children","_ref6","_jsxs","Routes","Route","index","element","window","PUBLIC_URL"],"sourceRoot":""}