{"name":"iframe-resizer","summary":"<p>此库可以自动调整同域和跨域 iFrame 的高度和宽度以适合其所包含的内容。它提供了一系列功能来解决使用 iFrame 时最常见的问题，其中包括：</p>\n<ul>\n<li>将 iFrame 的高度和宽度调整为内容大小。</li>\n<li>适用于多个嵌套的 iFrame。</li>\n<li>跨域 iFrames 的域身份验证。</li>\n<li>提供一系列的页面大小计算方法，支持复杂的CSS布局。</li>\n<li>使用MutationObserver检测可能导致页面调整大小的 DOM 更改。</li>\n<li>检测可能导致页面调整大小的事件（窗口大小调整、CSS 动画和过渡、方向改变和鼠标事件）。</li>\n<li>通过postMessage简化 iFrame 和主机页面之间的消息传递。</li>\n<li>修复 iFrame 中的页面链接并支持 iFrame 和父页面之间的链接。</li>\n<li>提供自定义尺寸和滚动方法。</li>\n<li>向 iFrame 公开父位置和视口大小。</li>\n<li>与ViewerJS配合使用以支持 PDF 和 ODF 文档。</li>\n<li>支持 IE 11</li>\n</ul>\n<h3>用法</h3>\n<p>可以使用原生JavaScript 调用它；</p>\n<pre><code class=\"language-javascript\">import iFrameResize from '@kne/iframe-resizer';\n\nconst iframes = iFrameResize([{ options }], [css selector] || [iframe]);\n</code></pre>\n<p>第二个文件 ( dist/contentWindow.js ) 需要放置在 iFrame 中包含的页面中。此文件旨在作为其他人系统上的访客，因此没有依赖关系，并且在被包含页面的消息激活之前不会执行任何操作。</p>\n<h3>典型设置</h3>\n<p>正常配置是当浏览器窗口大小改变或 iFrame 内容改变时，iFrame 会调整大小。要进行此设置，您需要将 iFrame 的一个尺寸配置为百分比，并告诉库仅更新另一个尺寸。通常，您会将宽度设置为 100%，并让高度缩放以适应内容。</p>\n<pre><code class=\"language-html\">&lt;style&gt;\n  iframe {\n    width: 1px;\n    min-width: 100%;\n  }\n&lt;/style&gt;\n&lt;iframe id=\"myIframe\" src=\"http://anotherdomain.com/iframe.html\"&gt;&lt;/iframe&gt;\n&lt;script&gt;\n  iFrameResize({ log: true }, '#myIframe')\n&lt;/script&gt;\n</code></pre>\n<p>注意：使用min-width设置 iFrame 的宽度，可以解决 iOS 中导致 iFrame 无法正确调整大小的问题。</p>","api":"<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>","example":{"isFull":false,"className":"iframe_resizer_184e5","style":"","list":[]}}
