{"name":"fetch-npm-package","summary":"<p>fetch-npm-package是一个仅在nodejs环境运行的包，不能web浏览器运行</p>\n<p>可以从npm上下载对应包的某版本(未指定就选取latest)到当前系统的临时目录，可以通过参数指定输出目录，将文件Copy到输出目录，也可以传入操作方法，在操作执行完后，临时目录及其里面的文件将被清理。</p>\n<p>使用方法：</p>\n<pre><code class=\"language-js\">const download = require('@kne/fetch-npm-package');\n\nawait download(packageName, packageVersion, options);\n</code></pre>","api":"<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>packageName</td>\n<td>需要下载的包名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>packageVersion</td>\n<td>需要下载的包的版本号，缺省则会回去该包的latest版本</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>其他参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options.outputPath</td>\n<td>输出目录，可以通过环境变量OUTPUT_PATH传递，该参数存在时优先使用该参数</td>\n<td>string</td>\n<td>build</td>\n</tr>\n<tr>\n<td>options.callback(dir)</td>\n<td>可以获取临时目录参数，在该函数执行完之后，将清理临时目录，该参数存在时，将不默认将outputPath设置为build，如果没有通过环境变量或者options.outputPath设置输出目录则不默认输出文件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>","example":{"isFull":false,"className":"fetch_npm_package_1e7c4","style":"","list":[]}}
